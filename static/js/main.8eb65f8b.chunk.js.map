{"version":3,"sources":["img/img_345.png","img/img_11r2.png","img/img_12r3.png","img/img_square.png","img/img_regularTriangle.png","img/img_pytha.png","img/anime_1_1.png","img/anime_1_2.png","img/anime_2_1.png","js/navbar.tsx","js/home.tsx","js/Tex.Component.tsx","js/Math.Component.tsx","js/pytha1.tsx","js/Layout.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","to","React","Component","Home","$","props","String","raw","children","$$","block","ExPytha","console","log","this","adding","className","src","img","alt","tex","addingImg","_","Pytha1","anime_1_1","anime_1_2","img_345","pytha_345","img_11r2","pytha_11r2","img_square","pythaAdd_11r2","img_12r3","pytha_12r3","img_regularTriangle","pythaAdd_12r3","anime_2_1","img_pytha","pytha","Layout","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8eb65f8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img_345.1cc8089d.png\";","module.exports = __webpack_public_path__ + \"static/media/img_11r2.f6efd7f0.png\";","module.exports = __webpack_public_path__ + \"static/media/img_12r3.3d0a9345.png\";","module.exports = __webpack_public_path__ + \"static/media/img_square.c43014bd.png\";","module.exports = __webpack_public_path__ + \"static/media/img_regularTriangle.d5bfb92e.png\";","module.exports = __webpack_public_path__ + \"static/media/img_pytha.0666b78a.png\";","module.exports = __webpack_public_path__ + \"static/media/anime_1_1.fe99f813.png\";","module.exports = __webpack_public_path__ + \"static/media/anime_1_2.922bc129.png\";","module.exports = __webpack_public_path__ + \"static/media/anime_2_1.426e92a6.png\";","import React from 'react';\nimport {Route, Link } from 'react-router-dom'\n// :: 三平方の定理，ピタゴラスの定理\n// :: Pythagorean Theorem\n\n\nexport default class Navbar extends React.Component{\n    render(){\n        return(\n            <div>\n                <h1>this is navbar!!!!</h1>\n                <p>powered by uji, hatta, aoki</p>\n                <p><Link to=\"/\">this is home</Link></p>\n                <p><Link to=\"/Pytha1\">this is pytha1</Link></p>\n            </div>\n        );\n        \n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n// :: 三平方の定理，ピタゴラスの定理\n// :: Pythagorean Theorem\n\n\nexport default class Home extends React.Component{\n    render(){\n        return(\n            <div>\n                <h1>this is homepage!!!!</h1>\n            </div>\n        );\n        \n    }\n}","import React from 'react';\nimport TeX from '@matejmazur/react-katex';\n\nexport const $: React.FC<{}> = props => (\n    <TeX>{String.raw`${props.children}`}</TeX>\n);\n\nexport const $$: React.FC<{}> = props => (\n    <TeX block>{String.raw`\\begin{aligned}${props.children}\\end{aligned}`}</TeX>\n);","// :: Math.Component.js\n// :: 数式等の表示に関する components\n// :: ExPytha :: Pythagorean Theorem の例示のためのクラス\n\nimport React from 'react';\n// import Tex from './Tex.Component';\nimport './../css/math.component.css';\nimport TeX from '@matejmazur/react-katex';\nimport {$, $$} from './Tex.Component';\n\ntype ExPythaProps = {\n    img: string;\n    addingImg?: string;\n    adding?: string;\n    tex: string;\n}\n\nclass ExPytha extends React.Component<ExPythaProps, {}> {\n    render(){\n        console.log(this.props.adding);\n        if(!this.props.adding){\n            return(\n                <div className=\"expytha\">\n                    <div className=\"main\">\n                        <img className=\"img_l\" src={this.props.img} alt={'No Images'}/>\n                        <$$>{this.props.tex}</$$>\n                    </div>\n                </div>\n            );\n        }else{\n            return(\n                <div className=\"expytha\">\n                    <div className=\"main\">\n                        <img className=\"img_l\" src={this.props.img} alt={'No Images'}/>\n                        <$$>{this.props.tex}</$$>\n                    </div>\n                    <div className=\"supplement\">\n                        <img className=\"img_r\" src={this.props.addingImg} alt={'No Images'}/>\n                        <$>{this.props.adding}</$>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ExPytha;\n","import React from 'react';\nimport ExPytha from './Math.Component';\nimport img_345 from './../img/img_345.png';\nimport img_11r2 from './../img/img_11r2.png';\nimport img_12r3 from './../img/img_12r3.png';\nimport img_square from './../img/img_square.png';\nimport img_regularTriangle from './../img/img_regularTriangle.png';\nimport img_pytha from './../img/img_pytha.png';\nimport anime_1_1 from './../img/anime_1_1.png';\nimport anime_1_2 from './../img/anime_1_2.png';\nimport anime_2_1 from './../img/anime_2_1.png';\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\nimport './../css/style.css';\nimport {$, $$} from './Tex.Component'\nconst _ = String.raw;\n\n// :: 三平方の定理，ピタゴラスの定理\n// :: Pythagorean Theorem\n\nexport default class Pytha1 extends React.Component{\n    render(){\n        return(\n            <div>\n                <h1>三平方の定理</h1>\n                <p>三平方の定理とは，直角三角形の辺の長さについての定理です．</p>\n                <h2>Comment::animation 1</h2>\n                <div className=\"anime\">\n                    <img src={anime_1_1} alt={'No Images'}/>\n                    <img src={anime_1_2} alt={'No Images'} />\n                </div>\n                <h2>具体例を見てみよう．</h2>\n                <ExPytha img={img_345} tex={pytha_345}/>\n                <ExPytha img={img_11r2} tex={pytha_11r2} addingImg={img_square} adding={pythaAdd_11r2}/>\n                <ExPytha img={img_12r3} tex={pytha_12r3} addingImg={img_regularTriangle} adding={pythaAdd_12r3}/>\n                <p>こりゃ無理だーーーー<$>y^2+b^2+c^2</$></p>\n                <h2>Comment::animation 2</h2>\n                <div className=\"anime\">\n                    <img src={anime_2_1} alt={'No Images'} />\n                </div>\n                <h2>まとめ</h2>\n                <p>三平方の定理とは，次のことである．</p>\n                <div className=\"pythaTheo\">\n                    <img src={img_pytha} alt={'No Images'} />\n                    <div className=\"text\">\n                        <p>直角三角形の辺の長さでは，次の関係が成り立つ．</p>\n                        <TeX>{pytha}</TeX>\n                    </div>\n                </div>\n            </div>\n        );\n        \n    }\n}\n\nconst pytha_345 = _`\n    a^2 + b^2 &= c^2 \\\\\n    3^2 + 4^2 &= 5^2 \\\\\n    9 + 16 &= 25 \\\\\n    25 &= 25 \\qquad \\text{成り立っている!!}\n`\n\nconst pytha_11r2 = _`\n    a^2 + b^2 &= c^2 \\\\\n    1^2 + 1^2 &= \\left(\\sqrt{2}~\\right)^2 \\\\\n    1 + 1 &= 2 \\\\\n    2 &= 2 \\qquad \\text{成り立っている!!}\n`\nconst pythaAdd_11r2 = _`\nこの直角三角形は，正方形を半分にしたものである．直角を挟んだ２辺の長さが等しいことから，直角二等辺三角形と呼ばれている．また，直角以外の２角は，45°とわかる．`\n\nconst pytha_12r3 = _`\n    a^2 + b^2 &= c^2 \\\\\n    1^2 + \\left(\\sqrt{3}~\\right)^2 &= 2^2 \\\\\n    1 + 3 &= 4 \\\\\n    4 &= 4 \\qquad \\text{成り立っている!!}\n`\nconst pythaAdd_12r3 = _`この直角三角形は，正三角形を半分にしたものである．つまり，正三角形の高さは，一辺\\sqrt{3}/2倍であるとわかる．また，直角以外の角の大きさは，60°と30°とわかる．`\n\nconst pytha = _`\na^2 + b^2 = c^2\n`","import React from 'react';\nimport Navbar from './navbar';\nimport Home from './home';\nimport Pytha1 from './pytha1';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n// :: 三平方の定理，ピタゴラスの定理\n// :: Pythagorean Theorem\n\n\nexport default class Layout extends React.Component{\n    render(){\n        return(\n            <Router>\n            <div>\n                <Navbar />\n                <Route exact path='/' component={Home}/>\n                <Route path=\"/Pytha1\" component={Pytha1}/>\n            </div>\n            </Router>\n        );\n        \n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './js/Layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}